name: Test

on: 
  pull_request:
    branches:
      - master
    types:
      - opened
      - synchronize

jobs:
  setup:
    name: Setup and Lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # This matches the Ubuntu version used in our Travis releases
        os: [ubuntu-20.04]
      # Don't cancel jobs on other platforms if one fails
      fail-fast: false
  
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: 15

      - name: Environment Information
        if: runner.os == 'Linux'
        run: dpkg --print-architecture

      - name: Cache Dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: ${{ matrix.os }};node_modules;${{ hashFiles('package-lock.json' )}}

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: NODE_DTRACE_PROVIDER_REQUIRE=hard npm install --prefer-offline

      - name: Sanitize Dependency Permissions for Cache
        if: steps.cache.outputs.cache-hit != 'true'
        run: chmod -R --verbose 777 ./node_modules

      - name: Lint
        run: npm run lint 

  manager:
    name: Manager
    needs: setup
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: 15

      - name: Cache Dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: ${{ matrix.os }};node_modules;${{ hashFiles('package-lock.json' )}}

      - name: Linux Release
        run: SENTRY_DSN='test' npm run do server_manager/electron_app/release_linux

      - name: Unit Test
        run: npm run do server_manager/test

  shadowbox:
    name: Shadowbox
    needs: setup
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: 15

      - name: Cache Dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: ${{ matrix.os }};node_modules;${{ hashFiles('package-lock.json' )}}

      - name: Build
        if: runner.os == 'Linux'
        run: npm run do shadowbox/server/build

      - name: Unit Test
        if: runner.os == 'Linux'
        run: npm run do shadowbox/test

      - name: Integration Test
        if: runner.os == 'Linux'
        run: npm run do shadowbox/integration_test/run

  metrics:
    name: Metrics Server
    needs: setup
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: 15

      - name: Cache Dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: ${{ matrix.os }};node_modules;${{ hashFiles('package-lock.json' )}}

      - name: Build
        if: runner.os == 'Linux'
        run: npm run do metrics_server/build

      - name: Unit Test
        if: runner.os == 'Linux'
        run: npm run do metrics_server/test
  
  sentry:
    name: Sentry Webhook
    needs: setup
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: 15

      - name: Cache Dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: ${{ matrix.os }};node_modules;${{ hashFiles('package-lock.json' )}}

      - name: Install Local Workspace Dependencies
        run: cd src/sentry_webhook && NODE_DTRACE_PROVIDER_REQUIRE=hard npm install --prefer-offline

      - name: Build
        if: runner.os == 'Linux'
        run: npm run do sentry_webhook/build
