name: Build and Test

on: push

jobs:
  # There's no need for shellcheck to run in a separate job, but the
  # main "manager" job uses ubuntu-16.04, and only ubuntu-20.04+ has
  # a recent enough version of shellcheck.  TODO: Merge these jobs.
  shellcheck:
    name: shellcheck
    runs-on: "ubuntu-20.04"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Lint
        run: |
          shellcheck -V
          yarn shellcheck

  manager:
    name: Build and Test
    
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # This matches the Ubuntu version used in our Travis releases
        os: [ubuntu-16.04]
      # Don't cancel jobs on other platforms if one fails
      fail-fast: false
      
    steps:
      - name: Checkout repo
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Show Environment Info
        run: |
          yarn -v
          shellcheck -V

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Check yarn cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      
      - name: Install dependencies
        run: yarn --prefer-offline

      - name: Lint
        run: yarn tslint

      - name: Manager
        run: |
          yarn do server_manager/electron_app/build
          yarn do server_manager/test

      - name: Shadowbox
        if: runner.os == 'Linux'
        run: |
          yarn do shadowbox/server/build
          yarn do shadowbox/test
          yarn do shadowbox/integration_test/run
      
      - name: Metrics Server
        if: runner.os == 'Linux'
        run: |
          yarn do metrics_server/build
          yarn do metrics_server/test
      
      - name:  Sentry Webhook
        if: runner.os == 'Linux'
        run: yarn do sentry_webhook/build
